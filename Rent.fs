\ Rent.fs

REQUIRE ffl/act.fs

VARIABLE PROFIT 
ACT-CREATE PLAN
: INITIALIZE PLAN ACT-(FREE) 0 PROFIT ! ;
: PLAN@ ( time -- value ) PLAN ACT-GET 0= IF 0 THEN ;
: PLAN! ( value time -- ) PLAN ACT-INSERT ;
: UPDATE-PROFIT ( time -- ) PLAN@ PROFIT @ MAX PROFIT ! ;
: PLAN-RENT ( price time -- ) DUP PLAN@ ROT PROFIT @ + MAX SWAP PLAN! ;
: RENT-ACTION ( time duration price -- key ) -ROT OVER + SWAP 21 LSHIFT OR 17 LSHIFT OR ;
: UPDATE-ACTION ( time duration -- key ) + DUP 21 LSHIFT OR 17 LSHIFT ;
: DECODE-ACTION ( key -- time price | time 0 )  DUP 1 17 LSHIFT 1- AND SWAP 17 RSHIFT DUP 1 21 LSHIFT 1- AND SWAP 21 RSHIFT ;


INITIALIZE
100 5  PLAN-RENT 
140 10 PLAN-RENT 
    5  UPDATE-PROFIT 
 80 14 PLAN-RENT
 70 15 PLAN-RENT
    10 UPDATE-PROFIT
    14 UPDATE-PROFIT
    15 UPDATE-PROFIT
PROFIT ?

INITIALIZE
1000  53282 PLAN-RENT 
1400 126500 PLAN-RENT 
      53282 UPDATE-PROFIT 
 800 143233 PLAN-RENT
 700 153282 PLAN-RENT
     126500 UPDATE-PROFIT
     143233 UPDATE-PROFIT
     153282 UPDATE-PROFIT
PROFIT ?

: .KEY-VALUE ( value key -- ) CR . ." => " . ;

ACT-CREATE MY-TREE

1000 4807 MY-TREE ACT-INSERT
2000   24 MY-TREE ACT-INSERT
3000  352 MY-TREE ACT-INSERT

' .KEY-VALUE MY-TREE ACT-EXECUTE

3 5 1 RENT-ACTION CR 15 .R  
3 5 UPDATE-ACTION CR 15 .R  
8 1 1 RENT-ACTION CR 15 .R  
3 5 1 RENT-ACTION DECODE-ACTION CR .S . . . 
3 5 UPDATE-ACTION DECODE-ACTION CR .S . . .
8 1 1 RENT-ACTION DECODE-ACTION CR .S . . .
BYE
